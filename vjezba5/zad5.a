GLAVNI		MOV		R13, #81<8
			MOV 	R0, #1<8 					;pointer na ulaz
			MOV		R1, #4<8					;pointer na izlaz
			
PETLJA		LDR		R2, [R0], #4
			CMP		R2, #8<28 					;usporedi sa zakljucnim podatkom
			BEQ		KRAJ
			CMP		R2, #0
			STREQ	R2, [R1], #4
			BEQ		PETLJA
			MOV 	R3, R2		
			STMFD	R13!, {R2}					;stavi na stog
POZIV1		BL		KUB							;rezultat vraca u R2
			ADD		R13, R13, #4				;micem sa stoga
			SUB		R2, R2, #1 					;u R2 mi je sada lijevi argument
			MOV 	R4, #2
			MUL		R3, R3, R4					;u R3 mi je sada desni argument
			STMFD	R13!, {R2, R3} 				;argumenti na stog
POZIV2		BL		DIV
			ADD 	R13, R13, #8
			;rezz vracen u R3
SPREMI		STR		R3, [R1], #4
			B		PETLJA
			
			
KUB			STMFD	R13!, {R0, R1}				;spremanje kont.
			;ADD		R10, R13, #8
			ADD		R13, R13, #8
			LDMFD	R13, {R0} ;R10
			MOV		R1, R0
			MUL		R0, R0, R1
			MUL		R0, R0, R1
			MOV		R2, R0
			SUB 	R13, R13, #8				; u R2 vracam rezz
			LDMFD	R13!, {R0, R1}				;vracanje kont..
			MOV		PC, LR  					; povratak u glavni
	
			
DIV			STMFD	R13!, {R1, R2, R4, R5, R6}	; spremanje konteksta
			;ADD 	R10, R13, #14				;koliko treba
			ADD		R13, R13, #14
			LDMFD	R13, {R1, R2} ;R10
			MOV		R4, #8<28					;maska
			MOV		R5, #0						; brojac negativnih
			ORRS	R1,	R1, R1
			ADDMI	R5, R5, #1
			RSBMI	R1, R1, #0					; ako je negativan, komplementiraj		
			ORRS	R2, R2, R2
			ADDMI	R5, R5, #1
			RSBMI	R2, R2, #0					; ako je neg, komp
			MOV		R3, #0; 	counter odnosno REZZ 
LOOP_DIV	SUBS	R1, R1, R2
			ADDPL	R3, R3, #1
			BPL		LOOP_DIV
			
			CMP		R5, #1
			RSBEQ	R3, R3, #0 ;neka je negativan
			SUB		R13, R13, #14
			LDMFD	R13!, {R1, R2, R4, R5, R6}
			MOV 	PC, LR 						;skok u glavni

KRAJ		SWI 	123456

			ORG 	100
			DW		0, 3, 6, -1, -6, 80000000
